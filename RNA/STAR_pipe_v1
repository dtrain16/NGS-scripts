#!/bin/bash
set -eu

# Multi-purpose read alignment pipeline with STAR
# Retrieve TAIR10 reference
# wget ftp://ftp.ensemblgenomes.org/pub/release-47/plants/fasta/arabidopsis_thaliana/dna/Arabidopsis_thaliana.TAIR10.dna.toplevel.fa.gz
# fasta index
# samtools faidx Arabidopsis_thaliana.TAIR10.dna.toplevel.fa
# chromosome lengths
# cut -f1,2 Arabidopsis_thaliana.TAIR10.dna.toplevel.fa.fai > Arabidopsis_thaliana.TAIR10.dna.toplevel.fa.len
# Build subread index
# subread-buildindex -o TAIR10.47_subread_index Arabidopsis_thaliana.TAIR10.dna.toplevel.fa

if [ "$#" -lt 4 ]; then
echo "Missing required arguments!"
echo "USAGE: RNAseq_subread_v2.sh <SE/PE> <fastq R1> <R2> <subread index> <fileID>"
echo "EXAMPLE: RNAseq_subread_v2.sh SE sample.fastq TAIR10_subread_index sample_rep1"
exit 1
fi

###
# SINGLE END
###

if [ "$1" == "SE" ]; then

# requirements
if [ "$#" -ne 4 ]; then
echo "Missing required arguments for single-end!"
echo "USAGE: RNAseq_subread_v2.sh <SE> <R1> <subread index> <fileID>"
echo "EXAMPLE: RNAseq_subread_v2.sh SE sample.fastq TAIR10_subread_index sample_rep1"
exit 1
fi

#gather input variables
type=$1
fq=$2;
index=$3; #path to subread indexed reference genome
fileID=$4;
dow=$(date +"%F-%H-%m-%S")

echo "##################"
echo "Performing single-end RNA-seq alignment with the following parameters:"
echo "Type: $type"
echo "Input Files: $fq"
echo "genome index: $index"
echo "Output ID: $fileID"
echo "Time of analysis: $dow"
echo "##################"

# make sample work directory
mkdir ${fileID}_subread_${dow}
mv $fq ${fileID}_subread_${dow}
cd ${fileID}_subread_${dow}

# initial fastqc
mkdir 1_fastqc
fastqc -t 4 $fq 2>&1 | tee -a ${fileID}_logs_${dow}.log
mv ${fq%%.fastq*}_fastqc* 1_fastqc

echo "Read trimming... "

# read trimming with trimgalore
mkdir 2_read_trimming
cd 2_read_trimming
trim_galore --fastqc --fastqc_args "-t 8" ../$fq 2>&1 | tee -a ../${fileID}_logs_${dow}.log

cd ../
mkdir 0_fastq
mv $fq 0_fastq

# read alignment
mkdir 3_align
mv 2_read_trimming/${fq%%.fastq*}_trimmed.fq* -t 3_align/
cd 3_align

echo "Beginning alignment ..."






